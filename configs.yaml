defaults:
  id: 'ConvGRU_mmnist_train'
  dataset: "mmnist"
  model: "ConvGRU"      # Supports "ConvGRU", "ODEConv"
  phase: "train"
  epochs: 25
  batch_size: 4
  load_model: False
  train_test_split: 0.8
  total_frames: 2000000   # 2M frames as in CW-VAE paper
  decODE: False
  off_wandb: False
  memory: True

  # Directories
  logdir: "logs"
  user_dir: "/home/pranav"            
  storage_dir: "scratch"
  data_dir: "datasets/MovingMNIST_video/train"    # user_dir/storage_dir/data_dir
  model_params_logdir: "model_params"             # has the form logs/<model_name>/model_params/<id>_00000xxxxx.pickle
  
  # Save & logs frequencies
  ckpt_save_freq: 2000            # Save model params every x steps
  test_log_freq: 50               # log test loss every x steps
  video_log_freq: 5000

  # Image sequence details
  resolution: 64
  in_channels: 3
  num_digits: 3
  n_layers: 4

  lr: 8e-4
  n_downs: 2
  decode_diff_method: 'dopri5'          # choices=['dopri5', 'euler', 'adams', 'rk4']
  frozen: True

  wandb_project: 'VideoODE'
  wandb_entity: 'pranav2109'
  offline: True                         # Beluga does not have internet; can set to False on cedar

# Experiment: Train ODEConvGRU on Moving MNIST with 50000 steps
train_mmnist_odecgru:
  id: 'ODEConv_mmnist_train'
  data_dir: "datasets/MovingMNIST_video/"
  model: "ODEConv"
  phase: "train"
  epochs: 25                            # 1 epoch is 2000 steps
  load_model: False

  downsize: True                        # if True, conv_encoder will 0.5x and conv_decoder will 2x the resolution for every layer in `n_layers`
  conv_n_units: [16,32,64,128]          # n_units for conv encoder and conv decoder in models/ODEConvGRU.py
  neural_ode_encoder_out_ch: 128        # output channels for ode_encoder_func in models/ODEConvGRU.py
  neural_ode_decoder_out_ch: 128        # output channels for ode_decoder_func in models/ODEConvGRU.py
  neural_ode_n_units: [64,128]                # n_units for the convnet in ode_encoder_func and ode_decoder_func
  n_ode_layers: 2                       # n_layers for the convnet in ode_encoder_func and ode_decoder_func
  deconv_n_units: [64,32,16,3]

  train_seq: 20
  train_in_seq: 10
  train_out_seq: 10
  test_seq: 20
  test_in_seq: 10
  test_out_seq: 10
  
  z_sample: False
  memory: True





